//ver. 3
public class Solution {
    public int removeDuplicates(int[] A) {
        if(A.length==0)
            return 0;
        //currently known maximum index of non-duplicate elements
        int currentMaxIndex=0;
        for(int i=1;i<A.length;i++)
            if(A[currentMaxIndex]!=A[i])//new non-duplicate element found
               A[++currentMaxIndex]=A[i];
        
        return currentMaxIndex+1;
    }
}

//ver. 2
public class Solution {
    public int removeDuplicates(int[] A) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(A==null||A.length==0)
            return 0;
        //i:current max index of non-duplicate elements
        int i=0;
        //j:index of the 1st element of those that have 
        //not been compared with non-duplicate ones.
        for(int j=1;j<A.length;j++)
            if(A[i]!=A[j])
                A[++i]=A[j];
        return i+1;
    }               
}

//ver. 1
public class Solution {
    public int removeDuplicates(int[] A) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        //1st submission revision
        if(A==null||A.length==0) return 0;
        int i=0, j=1;
        for(;(i+j)<A.length;)
            if(A[i]!=A[i+j]){
                A[i+1]=A[i+j];
                ++i;
            }
            else
                j++;
        
        return i+1;
    }
}
